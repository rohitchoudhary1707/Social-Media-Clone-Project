
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import com.mashape.unirest.http.exceptions.UnirestException;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.net.URL;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ACER
 */
public class myfollowings extends javax.swing.JFrame {

    /**
     * Creates new form myfollowings
     */
     String username1;
    public myfollowings(String username) {
        initComponents();
         Dimension d=Toolkit.getDefaultToolkit().getScreenSize();
        int w=(int)d.getWidth();
        int h=(int)d.getHeight();
        setSize(w,h); 
      jScrollPane1.setSize(600,400);
      this.username1=username;
      Thread  t1=new Thread(new myfollowings.fetchfollowings());
      t1.start();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        
        
                 lbback1.setSize(w,h);
        ImageIcon icon=new ImageIcon("src/backpic/img13.jpg");
          Image img=icon.getImage();
          Image scaledimg=img.getScaledInstance(lbback1.getWidth(), lbback1.getHeight(), Image.SCALE_SMOOTH);
          lbback1.setIcon(new ImageIcon(scaledimg));
         setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        mainpanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lbback1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        mainpanel2.setLayout(null);
        jScrollPane1.setViewportView(mainpanel2);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(370, 230, 420, 260);

        jLabel1.setFont(new java.awt.Font("Kristen ITC", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 255, 255));
        jLabel1.setText("MY FOLLOWINGS");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(490, 100, 240, 40);
        getContentPane().add(lbback1);
        lbback1.setBounds(0, 0, 1070, 710);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(myfollowings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(myfollowings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(myfollowings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(myfollowings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
             //   new myfollowings().setVisible(true);
            }
        });
    }
    class fetchfollowings implements Runnable
    {

        @Override
        public void run() {
          //  throw new UnsupportedOperationException("Not supported yet."); 
            try {
                //To change body of generated methods, choose Tools | Templates.
                HttpResponse<String> httpResponse = Unirest.get(globalclass.ip+"/myfollowings")
                        .queryString("username",username1)
                        .asString();
                 String msg=httpResponse.getBody();
                 System.out.println(msg);
                 StringTokenizer st=new StringTokenizer(msg,"~");
                 int count=st.countTokens();
                   mainpanel2.setPreferredSize(new Dimension(600,(count*200)));
                   panel ar[]=new panel[count];
                   int i=0;
                   int x=10;
                   int y=10;
                   while(st.hasMoreTokens()){
                    String token=st.nextToken();
                    StringTokenizer st2=new StringTokenizer(token,";");
                    String name=st2.nextToken();
                     String email=st2.nextToken();
                     String phno=st2.nextToken();
                     String photo=st2.nextToken();
                       if(name.equals(username1))
                       {
                           
                       }
                         else
                         {
                    ar[i]=new panel();
                   ar[i].setBounds(x,y,600,200);
                    try {
                    URL url = new URL(globalclass.ip+"/GetResource/"+photo);
                    BufferedImage image = ImageIO.read(url); 
                    BufferedImage newimg = resize(image,ar[i].lbphoto.getWidth(),ar[i].lbphoto.getHeight());
                    ar[i].lbphoto.setIcon(new ImageIcon(newimg));
                    
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
                  ar[i].lbname.setText(name);
                 ar[i].lbemail.setText(email);
//               ar[i].lbphoto.setText(photo);
                 ar[i].lbphoneno.setText(phno);
                 ar[i].followbutton.setText("Followed");
//                 ar[i].lbname.setText(name);
                  final int a=i;
                  ar[i].followbutton.addActionListener(new ActionListener(){
                        @Override
                        public void actionPerformed(ActionEvent e) {
                            try {
                                // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                                HttpResponse<String> httpResponse = Unirest.get(globalclass.ip+"/followuser")
                                        .queryString("followed_to",name)
                                        .queryString("followed_by",username1)
                                        .asString();
                                String msg=httpResponse.getBody();
                                    System.out.println(msg);
                                    if(msg.equals("inserted")){
                                        ar[a].followbutton.setText("followed");
                                    }
                                    else
                                    {
                                        ar[a].followbutton.setText("follow");
                                    }
                            } catch (UnirestException ex) {
                                //Logger.getLogger(myfollowings.class.getName()).log(Level.SEVERE, null, ex);
                                ex.printStackTrace();
                            }
                                
                        }
                      
                  });
                          
              mainpanel2.add(ar[i]);
              mainpanel2.setVisible(false);
              mainpanel2.setVisible(true);
             i++;
             y=y+210;
                         
                     
            }}
            } catch (UnirestException ex) {
               // Logger.getLogger(myfollowings.class.getName()).log(Level.SEVERE, null, ex);
               ex.printStackTrace();
            }
                        
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbback1;
    private javax.swing.JPanel mainpanel2;
    // End of variables declaration//GEN-END:variables
BufferedImage resize(BufferedImage image, int width, int height) {
        BufferedImage bi = new BufferedImage(width, height, BufferedImage.TRANSLUCENT);
        Graphics2D g2d = (Graphics2D) bi.createGraphics();
        g2d.addRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY));
        g2d.drawImage(image, 0, 0, width, height, null);
        g2d.dispose();
        return bi;
}
}


