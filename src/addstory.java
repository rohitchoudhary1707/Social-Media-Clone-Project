
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import com.mashape.unirest.http.exceptions.UnirestException;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.Date;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ACER
 */
public class addstory extends javax.swing.JFrame {

    /**
     * Creates new form addstory
     */
     File f1;
     JFileChooser fc;
    BufferedImage changedimg,img,resizedimg;
    String username1;
     String pid;
    public addstory(String pid) {
        initComponents();
         Dimension d=Toolkit.getDefaultToolkit().getScreenSize();
        int w=(int)d.getWidth();
        int h=(int)d.getHeight();
        setSize(w,h); 
         //this.username1=username;
             this.pid=pid;
             jScrollPane1.setSize(900,400);
             btsave.setEnabled(false);
           setDefaultCloseOperation(DISPOSE_ON_CLOSE);
           
          
                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfcaption = new javax.swing.JTextField();
        lbphoto = new javax.swing.JLabel();
        browsebutton = new javax.swing.JButton();
        addstorybutton = new javax.swing.JButton();
        btgrayscale = new javax.swing.JPanel();
        btblur = new javax.swing.JButton();
        btbrighter = new javax.swing.JButton();
        btdarker = new javax.swing.JButton();
        Grayscale = new javax.swing.JButton();
        bthefe = new javax.swing.JButton();
        btlofi = new javax.swing.JButton();
        btnashvile = new javax.swing.JButton();
        btwaldin = new javax.swing.JButton();
        btnofilter = new javax.swing.JButton();
        btsave = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        storypanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setText("caption");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 90, 130, 40);

        jLabel2.setText("photo");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 210, 110, 50);
        getContentPane().add(tfcaption);
        tfcaption.setBounds(280, 100, 140, 40);

        lbphoto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(lbphoto);
        lbphoto.setBounds(140, 190, 150, 100);

        browsebutton.setText("Browse");
        browsebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browsebuttonActionPerformed(evt);
            }
        });
        getContentPane().add(browsebutton);
        browsebutton.setBounds(320, 220, 130, 40);

        addstorybutton.setText("Add Story");
        addstorybutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addstorybuttonActionPerformed(evt);
            }
        });
        getContentPane().add(addstorybutton);
        addstorybutton.setBounds(20, 360, 120, 40);

        btgrayscale.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btgrayscale.setLayout(null);

        btblur.setText("Blur");
        btblur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btblurActionPerformed(evt);
            }
        });
        btgrayscale.add(btblur);
        btblur.setBounds(10, 40, 100, 25);

        btbrighter.setText("Brighter");
        btbrighter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btbrighterActionPerformed(evt);
            }
        });
        btgrayscale.add(btbrighter);
        btbrighter.setBounds(220, 40, 110, 25);

        btdarker.setText("Darker");
        btdarker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btdarkerActionPerformed(evt);
            }
        });
        btgrayscale.add(btdarker);
        btdarker.setBounds(410, 40, 90, 25);

        Grayscale.setText("Grayscale");
        Grayscale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GrayscaleActionPerformed(evt);
            }
        });
        btgrayscale.add(Grayscale);
        Grayscale.setBounds(10, 130, 110, 25);

        bthefe.setText("Hefe");
        bthefe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bthefeActionPerformed(evt);
            }
        });
        btgrayscale.add(bthefe);
        bthefe.setBounds(220, 130, 100, 25);

        btlofi.setText("LoFi");
        btlofi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btlofiActionPerformed(evt);
            }
        });
        btgrayscale.add(btlofi);
        btlofi.setBounds(410, 130, 100, 25);

        btnashvile.setText("Nashvile");
        btnashvile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnashvileActionPerformed(evt);
            }
        });
        btgrayscale.add(btnashvile);
        btnashvile.setBounds(10, 220, 110, 25);

        btwaldin.setText("Waldin");
        btwaldin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btwaldinActionPerformed(evt);
            }
        });
        btgrayscale.add(btwaldin);
        btwaldin.setBounds(211, 220, 110, 25);

        btnofilter.setText("Nofilter");
        btnofilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnofilterActionPerformed(evt);
            }
        });
        btgrayscale.add(btnofilter);
        btnofilter.setBounds(399, 220, 110, 25);

        getContentPane().add(btgrayscale);
        btgrayscale.setBounds(480, 60, 520, 290);

        btsave.setText("save change");
        btsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btsaveActionPerformed(evt);
            }
        });
        getContentPane().add(btsave);
        btsave.setBounds(270, 360, 150, 40);

        storypanel.setLayout(null);
        jScrollPane1.setViewportView(storypanel);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 430, 1020, 300);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel3.setText("ADD STORY");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(120, 20, 210, 40);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btblurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btblurActionPerformed
        // TODO add your handling code here:
        BlurFilter obj = new BlurFilter();
        changedimg = obj.filter(img);
        resizedimg = resize(changedimg, lbphoto.getWidth(),lbphoto.getHeight());
        lbphoto.setIcon(new ImageIcon(resizedimg));
        repaint();
        btsave.setEnabled(true);
    }//GEN-LAST:event_btblurActionPerformed

    private void btbrighterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btbrighterActionPerformed
        // TODO add your handling code here:
        BrighterFilter obj = new BrighterFilter();
        changedimg = obj.filter(img);
        resizedimg = resize(changedimg, lbphoto.getWidth(), lbphoto.getHeight());
        lbphoto.setIcon(new ImageIcon(resizedimg));
        repaint();
        btsave.setEnabled(true);
    }//GEN-LAST:event_btbrighterActionPerformed

    private void btdarkerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btdarkerActionPerformed
        // TODO add your handling code here:
        DarkerFilter obj = new DarkerFilter();
        changedimg = obj.filter(img);
        resizedimg = resize(changedimg, lbphoto.getWidth(), lbphoto.getHeight());
        lbphoto.setIcon(new ImageIcon(resizedimg));
        repaint();
        btsave.setEnabled(true);
    }//GEN-LAST:event_btdarkerActionPerformed

    private void GrayscaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GrayscaleActionPerformed
        // TODO add your handling code here:
        GrayscaleFilter obj = new GrayscaleFilter();
        changedimg = obj.filter(img);
        resizedimg = resize(changedimg, lbphoto.getWidth(), lbphoto.getHeight());
        lbphoto.setIcon(new ImageIcon(resizedimg));
        repaint();
        btsave.setEnabled(true);
    }//GEN-LAST:event_GrayscaleActionPerformed

    private void bthefeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bthefeActionPerformed
        // TODO add your handling code here:
        HefeFilter obj = new HefeFilter();
        changedimg = obj.filter(img);
        resizedimg = resize(changedimg, lbphoto.getWidth(), lbphoto.getHeight());
        lbphoto.setIcon(new ImageIcon(resizedimg));
        repaint();
        btsave.setEnabled(true);
    }//GEN-LAST:event_bthefeActionPerformed

    private void btlofiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btlofiActionPerformed
        // TODO add your handling code here:
        LoFiFilter obj = new LoFiFilter();
        changedimg = obj.filter(img);
        resizedimg = resize(changedimg, lbphoto.getWidth(), lbphoto.getHeight());
        lbphoto.setIcon(new ImageIcon(resizedimg));
        repaint();
        btsave.setEnabled(true);
    }//GEN-LAST:event_btlofiActionPerformed

    private void btnashvileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnashvileActionPerformed
        // TODO add your handling code here:
        NashvilleFilter obj = new  NashvilleFilter ();
        changedimg = obj.filter(img);
        resizedimg = resize(changedimg, lbphoto.getWidth(), lbphoto.getHeight());
        lbphoto.setIcon(new ImageIcon(resizedimg));
        repaint();
        btsave.setEnabled(true);
    }//GEN-LAST:event_btnashvileActionPerformed

    private void btwaldinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btwaldinActionPerformed
        // TODO add your handling code here:
        WaldenFilter obj = new WaldenFilter ();
        changedimg = obj.filter(img);
        resizedimg = resize(changedimg, lbphoto.getWidth(), lbphoto.getHeight());
        lbphoto.setIcon(new ImageIcon(resizedimg));
        repaint();
        btsave.setEnabled(true);

    }//GEN-LAST:event_btwaldinActionPerformed

    private void btnofilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnofilterActionPerformed
        // TODO add your handling code here:
        NoFilter obj = new  NoFilter ();
        changedimg = obj.filter(img);
        resizedimg = resize(changedimg, lbphoto.getWidth(), lbphoto.getHeight());
        lbphoto.setIcon(new ImageIcon(resizedimg));
        repaint();
        btsave.setEnabled(true);
    }//GEN-LAST:event_btnofilterActionPerformed

    private void browsebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browsebuttonActionPerformed
        // TODO add your handling code here:
         fc=new JFileChooser();
      int ans= fc.showOpenDialog(this);
      if(ans==JFileChooser.APPROVE_OPTION){
//      fc.getSelectedFile();
      f1=fc.getSelectedFile();
          System.out.println(f1.getPath());
     // lbphoto.setText(f1.getPath());
      try {
              img=ImageIO.read(f1);
              BufferedImage newimg=resize(img,lbphoto.getWidth(),lbphoto.getHeight());
              lbphoto.setIcon(new ImageIcon(newimg));
          } catch (Exception e) {
              e.printStackTrace();
          }
      }
    }//GEN-LAST:event_browsebuttonActionPerformed

    private void btsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btsaveActionPerformed
        // TODO add your handling code here:
         f1=new File("src/FilteredPhotos");
            if(!(f1.exists())){
                f1.mkdir();
            }
            String filename=new Date().getTime()+".jpg";
            f1=new File("src/FilteredPhotos/"+filename);
         try {
             ImageIO.write(changedimg,"jpg",f1);
             JOptionPane.showMessageDialog(rootPane, "File saved successfully");
             
             // TODO add your handling code here:
         } catch (IOException ex) {
                ex.printStackTrace();
         }
    }//GEN-LAST:event_btsaveActionPerformed

    private void addstorybuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addstorybuttonActionPerformed
        // TODO add your handling code here:
         String caption=tfcaption.getText();
        String photo=lbphoto.getText();
         try {
             HttpResponse<String> httpResponse = Unirest.post(globalclass.ip+"/addstory")
                     .queryString("caption",caption)
                     .queryString("username",username1)
                     .queryString("pid",pid)
                     .field("photo",f1)
                     .asString();
             if(httpResponse.getBody().equals("success")){
                 JOptionPane.showMessageDialog(rootPane, "Story added successfully !");
                 loadstories();
             }
         } catch (UnirestException ex) {
             //Logger.getLogger(addstory.class.getName()).log(Level.SEVERE, null, ex);
             ex.printStackTrace();
         }
    }//GEN-LAST:event_addstorybuttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addstory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addstory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addstory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addstory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new addstory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Grayscale;
    private javax.swing.JButton addstorybutton;
    private javax.swing.JButton browsebutton;
    private javax.swing.JButton btblur;
    private javax.swing.JButton btbrighter;
    private javax.swing.JButton btdarker;
    private javax.swing.JPanel btgrayscale;
    private javax.swing.JButton bthefe;
    private javax.swing.JButton btlofi;
    private javax.swing.JButton btnashvile;
    private javax.swing.JButton btnofilter;
    private javax.swing.JButton btsave;
    private javax.swing.JButton btwaldin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbphoto;
    private javax.swing.JPanel storypanel;
    private javax.swing.JTextField tfcaption;
    // End of variables declaration//GEN-END:variables
 
 void loadstories(){
     new Thread(new Runnable(){
         @Override
         public void run() {
             //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
              try {
             HttpResponse<String> httpResponse = Unirest.get(globalclass.ip+"/loadstories1")
                     .queryString("pid",pid)
                     .asString();
             String msg=httpResponse.getBody();
             System.out.println("msg-->"+msg);
              StringTokenizer st=new StringTokenizer(msg,"~");
                 int count=st.countTokens();
                  storypanel.setPreferredSize(new Dimension(900,900));
                   panel2 ar[]=new panel2[count];
                   int i=0;
                   int x=10;
                   int y=10;
                   while(st.hasMoreTokens()){
                       String token=st.nextToken();
                       StringTokenizer st2=new StringTokenizer(token,";");
                       String caption=st2.nextToken();
                       String photo=st2.nextToken();
                       String sid=st2.nextToken();
                        ar[i]=new panel2();
                      ar[i].setBounds(x,y,250,250);
                      try {
                    URL url = new URL(globalclass.ip+"/GetResource/"+photo);
                    BufferedImage image = ImageIO.read(url); 
                    BufferedImage newimg = resize(image,ar[i].lbphoto1.getWidth(),ar[i].lbphoto1.getHeight());
                    ar[i].lbphoto1.setIcon(new ImageIcon(newimg));
                    
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
                      ar[i].lbcaption.setText(caption);
                      ar[i].btclose.addActionListener(new ActionListener() {
                           @Override
                           public void actionPerformed(ActionEvent e) {
                               try {
                                   //  throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                                   HttpResponse<String> httpResponse1 = Unirest.get(globalclass.ip+"/close")
                                           .queryString("sid", sid)
                                           .asString();
                          String msg1=httpResponse1.getBody();
                          if(msg1.equals("deleted"))
                          {
                              JOptionPane.showMessageDialog(rootPane, "story deleted successfully");
                              storypanel.removeAll();
                              storypanel.repaint();
                                                            loadstories();

                          }
                               } catch (UnirestException ex) {
                                   //Logger.getLogger(addstory.class.getName()).log(Level.SEVERE, null, ex);
                                   ex.printStackTrace();
                               }
                              
                           }
                       }
                      );
                      storypanel.add(ar[i]);
                      storypanel.setVisible(false);
                      storypanel.setVisible(true);
                      i++;
                      if(x>500){
                          x=10;
                          y=y+270;
                      }
                      else
                      {
                          x=x+270;
                      }
         } 
         }
              catch (UnirestException ex) {
             //Logger.getLogger(addstory.class.getName()).log(Level.SEVERE, null, ex);
             ex.printStackTrace();
              
         
     }
         }   
 }).start();
     }
  BufferedImage resize(BufferedImage image, int width, int height) {
        BufferedImage bi = new BufferedImage(width, height, BufferedImage.TRANSLUCENT);
        Graphics2D g2d = (Graphics2D) bi.createGraphics();
        g2d.addRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY));
        g2d.drawImage(image, 0, 0, width, height, null);
        g2d.dispose();
        return bi;
}
}

